/*********************************************************************
* \author see AUTHORS file
* \copyright 2015-2018 BTC Business Technology Consulting AG and others
*
* This program and the accompanying materials are made
* available under the terms of the Eclipse Public License 2.0
* which is available at https://www.eclipse.org/legal/epl-2.0/
*
* SPDX-License-Identifier: EPL-2.0
**********************************************************************/
/**
 * \file       IdlQuickfixProvider.xtend
 * 
 * \brief      Custom Quick Fixes; \see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 * 
 * \remark     Generated by Xtext
*/
package com.btc.serviceidl.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue
import com.btc.serviceidl.validation.IdlValidator
import java.util.UUID
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext
import com.btc.serviceidl.idl.InterfaceDeclaration

class IdlQuickfixProvider extends org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
{
   @Fix(IdlValidator::INTERFACE_GUID)
   def capitalizeName(Issue issue, IssueResolutionAcceptor acceptor)
   {
      acceptor.accept(issue, 'Add interface GUID', 'Generate random GUID',
         null, // use custom icon, if we want ...
         new ISemanticModification()
         {
            override apply(EObject element, IModificationContext context) throws Exception
            {
               val interface_decalaration = element as InterfaceDeclaration
               interface_decalaration.guid = UUID.randomUUID.toString.toUpperCase
            }
         }
      )
   }
}
