/*********************************************************************
 * \author see AUTHORS file
 * \copyright 2015-2018 BTC Business Technology Consulting AG and others
 * 
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 **********************************************************************/
package com.btc.serviceidl.generator.java

import com.btc.serviceidl.generator.ITargetVersionProvider
import com.btc.serviceidl.generator.common.ProjectType
import com.btc.serviceidl.idl.AbstractContainerDeclaration
import org.eclipse.xtend.lib.annotations.Accessors

import static extension com.btc.serviceidl.util.Util.*

@Accessors(NONE)
class POMGenerator
{
    val ITargetVersionProvider targetVersionProvider
    val MavenResolver mavenResolver

    private def getTargetVersion()
    {
        targetVersionProvider.getTargetVersion(JavaConstants.SERVICECOMM_VERSION_KIND)
    }

    def String generatePOMContents(AbstractContainerDeclaration container, ProjectType projectType,
        Iterable<MavenDependency> dependencies, String optProtobufFile)
    {
        val artifactId = MavenResolver.makePackageId(container, projectType)
        val groupId = mavenResolver.groupId
        val version = container.resolveVersion
        
        val effectiveDependencies = dependencies.filter[it.artifactId != artifactId].sortBy[it.groupId + "/" + it.artifactId] 

        // TODO depending on the target version, different protoc versions must be used
        // TODO use the https://github.com/xolstice/protobuf-maven-plugin instead
        // TODO when making ServiceComm OSS, the internal repository should be removed here entirely
        '''
            <project xmlns="http://maven.apache.org/POM/4.0.0"
                     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                                         http://maven.apache.org/xsd/maven-4.0.0.xsd">
            
               <modelVersion>4.0.0</modelVersion>
            
               <groupId>«groupId»</groupId>
               <artifactId>«artifactId»</artifactId>
               <version>«version»</version>
            
               <properties>
               <!-- ServiceComm properties -->
               <servicecomm.version>«targetVersion».0</servicecomm.version>
               
               <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
               <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
               
               <maven.compiler.source>1.8</maven.compiler.source>
               <maven.compiler.target>1.8</maven.compiler.target>
               
               «IF optProtobufFile !== null»
               <!-- directory for files generated by the protoc compiler (default = /src/main/java) -->
               <protobuf.outputDirectory>${project.build.sourceDirectory}</protobuf.outputDirectory>
               <!-- *.proto source files (default = /src/main/proto) -->
               <protobuf.sourceDirectory>${basedir}/src/main/proto</protobuf.sourceDirectory>

               <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
               <os-maven-plugin.version>1.4.1.Final</os-maven-plugin.version>
               <protobuf.version>3.1.0</protobuf.version>
               «ENDIF»
            
               </properties>
                           
               <distributionManagement>
               <repository>
                  <id>cab-maven</id>
                  <name>CAB Main Maven Repository</name>
                  <url>https://artifactory.bop-dev.de/artifactory/cab-maven/</url>
               </repository>
               </distributionManagement>
               
               <dependencies>
                  «FOR dependency : effectiveDependencies»
                      <dependency>
                         <groupId>«dependency.groupId»</groupId>
                         <artifactId>«dependency.artifactId»</artifactId>
                         <version>«dependency.version»</version>
                         «IF dependency.scope !== null»
                             <scope>«dependency.scope»</scope>
                         «ENDIF»
                      </dependency>
                  «ENDFOR»
               </dependencies>
            
               <build>
               «IF optProtobufFile !== null»
                 <extensions>
                    <!-- provides os.detected.classifier (i.e. linux-x86_64, osx-x86_64) property -->
                    <extension>
                        <groupId>kr.motd.maven</groupId>
                        <artifactId>os-maven-plugin</artifactId>
                        <version>${os-maven-plugin.version}</version>
                    </extension>
                 </extensions>   
                 <pluginManagement>
                  <plugins>
                     <plugin>
                        <groupId>org.eclipse.m2e</groupId>
                        <artifactId>lifecycle-mapping</artifactId>
                        <version>1.0.0</version>
                        <configuration>
                           <lifecycleMappingMetadata>
                              <pluginExecutions>
                                 <pluginExecution>
                                    <pluginExecutionFilter>
                                       <groupId>org.apache.maven.plugins</groupId>
                                       <artifactId>maven-antrun-plugin</artifactId>
                                       <versionRange>[1.0.0,)</versionRange>
                                       <goals>
                                          <goal>run</goal>
                                       </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                       <execute />
                                    </action>
                                 </pluginExecution>
                              </pluginExecutions>
                           </lifecycleMappingMetadata>
                        </configuration>
                     </plugin>
                  </plugins>
               </pluginManagement>
               «ENDIF»
               <plugins>
                  «IF optProtobufFile !== null»               
                  <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-dependency-plugin</artifactId>
                      <version>${maven-dependency-plugin.version}</version>
                      <executions>
                          <execution>
                              <id>copy-protoc</id>
                              <phase>generate-sources</phase>
                              <goals>
                                  <goal>copy</goal>
                              </goals>
                              <configuration>
                                  <artifactItems>
                                      <artifactItem>
                                          <groupId>com.google.protobuf</groupId>
                                          <artifactId>protoc</artifactId>
                                          <version>${protobuf.version}</version>
                                          <classifier>${os.detected.classifier}</classifier>
                                          <type>exe</type>
                                          <overWrite>true</overWrite>
                                          <outputDirectory>${project.build.directory}</outputDirectory>
                                      </artifactItem>
                                  </artifactItems>
                              </configuration>
                          </execution>
                      </executions>
                  </plugin>
                  <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-antrun-plugin</artifactId>
                     <version>1.8</version>
                     <executions>
                        <execution>
                           <id>generate-sources</id>
                           <phase>generate-sources</phase>
                           <configuration>
                              <target>
                                 <property name="protoc.filename" value="protoc-${protobuf.version}-${os.detected.classifier}.exe"/>
                                 <property name="protoc.filepath" value="${project.build.directory}/${protoc.filename}"/>
                                 <chmod file="${protoc.filepath}" perm="ugo+rx"/>
                                 <mkdir dir="${protobuf.outputDirectory}" />
                                 <exec executable="${protoc.filepath}" failonerror="true">
                                    <arg value="--java_out=${protobuf.outputDirectory}" />
                                    <arg value="-I=${basedir}\.." />
                                    <arg value="--proto_path=${protobuf.sourceDirectory}" />
                                    <arg value="${protobuf.sourceDirectory}/«optProtobufFile».proto" />
                                 </exec> 
                              </target>
                           </configuration>
                           <goals>
                              <goal>run</goal>
                           </goals>
                        </execution>
                     </executions>
                  </plugin>
                  «ENDIF»
                  
                  <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-compiler-plugin</artifactId>
                     <version>3.3</version>
                     <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                     </configuration>
                  </plugin>
               </plugins>
               </build>
            
            </project>
        '''
    }
}
